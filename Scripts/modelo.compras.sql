/*
DROP TABLE DEMOS.DETALLECOMPRAS;
DROP TABLE DEMOS.COMPRAS;
DROP TABLE DEMOS.CLIENTES;
DROP TABLE DEMOS.ARTICULOS;
DROP TABLE DEMOS.CONTADORCOMPRAS;
*/

CREATE SCHEMA DEMOS;

CREATE TABLE DEMOS.CLIENTES (
  NUMERO SERIAL NOT NULL,
  NIF VARCHAR(9) NOT NULL,
  NOMBRE VARCHAR(20) NOT NULL,
  APELLIDOS VARCHAR(40) NOT NULL,
  DOMICILIO VARCHAR(40),
  CP INTEGER,
  LOCALIDAD VARCHAR(30),
  PROVINCIA VARCHAR(20),
  EMAIL VARCHAR(50) NOT NULL,
  USUARIO VARCHAR(15) NOT NULL,
  CLAVE VARCHAR(15) NOT NULL,
  FECHANACIMIENTO DATE,
  FECHAALTA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  DESCUENTO DECIMAL(8,2) DEFAULT 0.0,
  MEDIODEPAGO VARCHAR(20),
  COMENTARIOS VARCHAR(2048),
  SUBSCRIPCION CHAR(1) DEFAULT '0',
  CONSTRAINT CLIENTES_PK PRIMARY KEY (NIF),
  CONSTRAINT USUARIO_UNIQUE UNIQUE (USUARIO)
);

CREATE TABLE DEMOS.ARTICULOS (
  NUMERO SERIAL NOT NULL,
  CODIGO VARCHAR(12) NOT NULL,
  NOMBRE VARCHAR(80) NOT NULL,
  DESCRIPCION VARCHAR(1024),
  PRECIOUNIDAD DECIMAL(8,2) NOT NULL,
  PESOGRAMOS REAL,
  ALTOMM REAL,
  ANCHOMM REAL,
  LARGOMM REAL,
  CANTIDAD INTEGER DEFAULT 0,
  FECHAALTA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ARTICULOS_PK PRIMARY KEY (CODIGO)
);

CREATE TABLE DEMOS.COMPRAS (
  NUMERO SERIAL NOT NULL,
  CODIGO VARCHAR(16) NOT NULL,
  FECHA DATE NOT NULL,
  CLIENTE VARCHAR(9) NOT NULL,
  TOTAL DECIMAL(8,2) DEFAULT 0.0,
  FECHAALTA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT COMPRAS_PK PRIMARY KEY (CODIGO),
  CONSTRAINT COMPRAS_CLIENTE_KF FOREIGN KEY (CLIENTE) REFERENCES DEMOS.CLIENTES (NIF)
);

CREATE TABLE DEMOS.DETALLECOMPRAS (
  NUMERO SERIAL NOT NULL,
  COMPRA VARCHAR(16) NOT NULL,
  ARTICULO VARCHAR(12) NOT NULL,
  CANTIDAD INTEGER,
  CONSTRAINT DETALLECOMPRAS_PK PRIMARY KEY (COMPRA, ARTICULO),
  CONSTRAINT DETALLECOMPRAS_COMPRAS_FK FOREIGN KEY (COMPRA) REFERENCES DEMOS.COMPRAS (CODIGO),
  CONSTRAINT DETALLECOMPRAS_ARTICULOS_FK FOREIGN KEY (ARTICULO) REFERENCES DEMOS.ARTICULOS (CODIGO)  
);


------------------------------------

CREATE OR REPLACE PROCEDURE PROBAR_DESDE_JAVA(
  IN a NUMERIC, IN b NUMERIC, IN c NUMERIC, INOUT hi NUMERIC, INOUT lo NUMERIC, INOUT v NUMERIC
)
LANGUAGE plpgsql    
AS $$
BEGIN
   
   hi := GREATEST(a, b, c);
   lo := LEAST(a, b, c);
   
   v := v * v;
   
END;
$$;

